
irq_num_to_name_map_stm32f303xBCDE = [ \
    'main',
    'reset',
    'NMI',
    'HardFault',
    'MemManage',
    'BusFault',
    'UsageFault',
    'Reserved',
    'Reserved',
    'Reserved',
    'Reserved',
    'SVCall',
    'Reserved',
    'Reserved',
    'PendSV',
    'SysTick',
    'WWDG',
    'PVD',
    'TAMPER_STAMP',
    'RTC_WKUP',
    'FLASH',
    'RCC',
    'EXTI0',
    'EXTI1',
    'EXTI2_TS',
    'EXTI3',
    'EXTI4',
    'DMA1_Channel1',
    'DMA1_Channel2',
    'DMA1_Channel3',
    'DMA1_Channel4',
    'DMA1_Channel5',
    'DMA1_Channel6',
    'DMA1_Channel7',
    'ADC1_2',
    'USB_HP/CAN_TX',
    'USP_LP/CAN_RX0',
    'CAN_RX1',
    'CAN_SCE',
    'EXTI9_5',
    'TIM1_BRK/TIM15',
    'TIM1_UP/TIM16',
    'TIM1_TRG_COM/TIM17',
    'TIM1_CC',
    'TIM2',
    'TIM3',
    'TIM4',
    'I2C1_EV',
    'I2C1_ER',
    'I2C2_EV',
    'I2C2_ER',
    'SPI1',
    'SPI2',
    'USART1',
    'USART2',
    'USART3',
    'EXTI15_10',
    'RTC_Alarm',
    'USBWakeUp',
    'TIM8_BRK',
    'TIM8_UP',
    'TIM8_TRG_COM',
    'TIM8_CC',
    'ADC3',
    'FMC',
    'Reserved',
    'Reserved',
    'SPI3',
    'UART4',
    'UART5',
    'TIM6_DAC',
    'TIM7',
    'DMA2_Channel1',
    'DMA2_Channel2',
    'DMA2_Channel3',
    'DMA2_Channel4',
    'DMA2_Channel5',
    'ADC4',
    'Reserved',
    'Reserved',
    'COMP1_2_3',
    'COMP4_5_6',
    'COMP7',
    'Reserved',
    'Reserved',
    'Reserved',
    'Reserved',
    'Reserved',
    'I2C3_EV',
    'I2C3_ER',
    'USB_HP',
    'USB_LP',
    'USB_WakeUp_RMP',
    'TIM20_BRK',
    'TIM20_UP',
    'TIM20_TRG_COM',
    'TIM20_CC',
    'FPU',
]

class InterruptContext_STM32:

    @staticmethod
    def getInterruptContext(irq_num):
        if irq_num > len(irq_num_to_name_map_stm32f303xBCDE) - 1:
            return "Unknown"
        return irq_num_to_name_map_stm32f303xBCDE[irq_num]
